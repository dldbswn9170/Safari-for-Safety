{"ast":null,"code":"var _jsxFileName = \"/Users/dawn/Documents/SFS/sfs/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport RoadkillChart from './components/RoadkillChart';\nimport { regionCoordinates, roadkillData } from './constants/regionData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _regionCoordinates$se;\n  const [selectedRegion, setSelectedRegion] = useState('서울');\n  const [isChartOpen, setIsChartOpen] = useState(true);\n  const currentData = roadkillData[selectedRegion] || [];\n  const totalCount = currentData.reduce((sum, item) => sum + item.count, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      selectedRegion: selectedRegion,\n      setSelectedRegion: setSelectedRegion,\n      regionCoordinates: regionCoordinates,\n      currentData: currentData,\n      totalCount: totalCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadkillChart, {\n      isOpen: isChartOpen,\n      onToggle: () => setIsChartOpen(prev => !prev),\n      currentLocationName: (_regionCoordinates$se = regionCoordinates[selectedRegion]) === null || _regionCoordinates$se === void 0 ? void 0 : _regionCoordinates$se.name,\n      currentData: currentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yoZoOjYGwO8SqAGBYqOCl5qBdYw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Sidebar","RoadkillChart","regionCoordinates","roadkillData","jsxDEV","_jsxDEV","App","_s","_regionCoordinates$se","selectedRegion","setSelectedRegion","isChartOpen","setIsChartOpen","currentData","totalCount","reduce","sum","item","count","style","position","width","height","display","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onToggle","prev","currentLocationName","name","_c","$RefreshReg$"],"sources":["/Users/dawn/Documents/SFS/sfs/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport RoadkillChart from './components/RoadkillChart';\nimport { regionCoordinates, roadkillData } from './constants/regionData';\n\nexport default function App() {\n  const [selectedRegion, setSelectedRegion] = useState('서울');\n  const [isChartOpen, setIsChartOpen] = useState(true);\n  const currentData = roadkillData[selectedRegion] || [];\n  const totalCount = currentData.reduce((sum, item) => sum + item.count, 0);\n\n  return (\n    <div style={{ position: 'relative', width: '100vw', height: '100vh', display: 'flex' }}>\n      <Sidebar\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        regionCoordinates={regionCoordinates}\n        currentData={currentData}\n        totalCount={totalCount}\n      />\n      <RoadkillChart\n        isOpen={isChartOpen}\n        onToggle={() => setIsChartOpen((prev) => !prev)}\n        currentLocationName={regionCoordinates[selectedRegion]?.name}\n        currentData={currentData}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMc,WAAW,GAAGV,YAAY,CAACM,cAAc,CAAC,IAAI,EAAE;EACtD,MAAMK,UAAU,GAAGD,WAAW,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;EAEzE,oBACEb,OAAA;IAAKc,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrFnB,OAAA,CAACL,OAAO;MACNS,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA,iBAAkB;MACrCR,iBAAiB,EAAEA,iBAAkB;MACrCW,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvB,OAAA,CAACJ,aAAa;MACZ4B,MAAM,EAAElB,WAAY;MACpBmB,QAAQ,EAAEA,CAAA,KAAMlB,cAAc,CAAEmB,IAAI,IAAK,CAACA,IAAI,CAAE;MAChDC,mBAAmB,GAAAxB,qBAAA,GAAEN,iBAAiB,CAACO,cAAc,CAAC,cAAAD,qBAAA,uBAAjCA,qBAAA,CAAmCyB,IAAK;MAC7DpB,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAvBuBD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}