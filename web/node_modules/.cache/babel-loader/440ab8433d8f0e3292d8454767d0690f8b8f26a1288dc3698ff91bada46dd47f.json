{"ast":null,"code":"var _jsxFileName = \"/Users/dawn/Documents/SFS/sfs/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport RoadkillChart from './components/RoadkillChart';\nimport { locationData, roadkillData } from './constants/locationData';\nimport { useKakaoMap } from './hooks/useKakaoMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedProvince, setSelectedProvince] = useState('서울');\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [isChartOpen, setIsChartOpen] = useState(true);\n  const apiKey = '여기에_카카오_API_KEY_입력'; // ← 본인 키로 교체\n\n  const {\n    mapContainer\n  } = useKakaoMap({\n    selectedProvince,\n    selectedCity,\n    locationData,\n    apiKey\n  });\n\n  // 현재 데이터 키 생성 (도시 선택시 시/도-시/군구 형태로 key가 결정)\n  const dataKey = selectedCity ? `${selectedProvince}-${selectedCity}` : selectedProvince;\n  const currentData = roadkillData[dataKey] || [];\n  const totalCount = currentData.reduce((sum, item) => sum + item.count, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        zIndex: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedRegion: selectedProvince,\n        setSelectedRegion: setSelectedProvince,\n        regionCoordinates: locationData,\n        currentData: currentData,\n        totalCount: totalCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadkillChart, {\n      isOpen: isChartOpen,\n      onToggle: () => setIsChartOpen(prev => !prev),\n      currentLocationName: selectedCity ? `${locationData[selectedProvince].name} ${selectedCity}` : locationData[selectedProvince].name,\n      currentData: currentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6tq9KI/oMxF2zdyS5rE7xFEqXgc=\", false, function () {\n  return [useKakaoMap];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Sidebar","RoadkillChart","locationData","roadkillData","useKakaoMap","jsxDEV","_jsxDEV","App","_s","selectedProvince","setSelectedProvince","selectedCity","setSelectedCity","isChartOpen","setIsChartOpen","apiKey","mapContainer","dataKey","currentData","totalCount","reduce","sum","item","count","style","position","width","height","display","children","ref","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","selectedRegion","setSelectedRegion","regionCoordinates","isOpen","onToggle","prev","currentLocationName","name","_c","$RefreshReg$"],"sources":["/Users/dawn/Documents/SFS/sfs/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport RoadkillChart from './components/RoadkillChart';\nimport { locationData, roadkillData } from './constants/locationData';\nimport { useKakaoMap } from './hooks/useKakaoMap';\n\nexport default function App() {\n  const [selectedProvince, setSelectedProvince] = useState('서울');\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [isChartOpen, setIsChartOpen] = useState(true);\n  const apiKey = '여기에_카카오_API_KEY_입력'; // ← 본인 키로 교체\n\n  const { mapContainer } = useKakaoMap({\n    selectedProvince,\n    selectedCity,\n    locationData,\n    apiKey\n  });\n\n  // 현재 데이터 키 생성 (도시 선택시 시/도-시/군구 형태로 key가 결정)\n  const dataKey = selectedCity ? `${selectedProvince}-${selectedCity}` : selectedProvince;\n  const currentData = roadkillData[dataKey] || [];\n  const totalCount = currentData.reduce((sum, item) => sum + item.count, 0);\n\n  return (\n    <div style={{ position: 'relative', width: '100vw', height: '100vh', display: 'flex' }}>\n      {/* 지도 */}\n      <div ref={mapContainer} style={{ position: 'absolute', top: 0, left: 0, width: '100vw', height: '100vh', zIndex: 1 }} />\n      {/* 사이드바 */}\n      <div style={{ position: 'relative', zIndex: 2 }}>\n        <Sidebar\n          selectedRegion={selectedProvince}\n          setSelectedRegion={setSelectedProvince}\n          regionCoordinates={locationData}\n          currentData={currentData}\n          totalCount={totalCount}\n        />\n      </div>\n      {/* 차트 */}\n      <RoadkillChart\n        isOpen={isChartOpen}\n        onToggle={() => setIsChartOpen((prev) => !prev)}\n        currentLocationName={selectedCity ? `${locationData[selectedProvince].name} ${selectedCity}` : locationData[selectedProvince].name}\n        currentData={currentData}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}